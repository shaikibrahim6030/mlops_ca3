name: CI/CD - Build, Push, and Deploy

on:
  push:
    branches: [ "Dev" ]
  workflow_dispatch:
jobs:
  build-and-push:
    runs-on: ubuntu-latest
    name: Build and Push to Docker Hub
    steps:
      - name: 1. Checkout Repository
        uses: actions/checkout@v4
      - name: 2. Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.9'

      
      - name: 3. Install dependencies
        run: |
          pip install -r app/requirements.txt
          pip install pytest 
          
      - name: 4. Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: 5. Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}

      - name: 6. Build and Push Docker Image
        uses: docker/build-push-action@v5
        with:
          context: .
          file: Dockerfile 
          push: true
          tags: |
            ${{ secrets.DOCKER_HUB_USERNAME }}/house-price:latest
            ${{ secrets.DOCKER_HUB_USERNAME }}/house-price:${{ github.sha }}

  deploy-to-minikube:
    runs-on: ubuntu-latest
    name: Deploy to Minikube
    needs: build-and-push
    steps:
      - name: 1. Checkout Repository
        uses: actions/checkout@v4

      - name: 2. List files in the repository (for debugging)
        run: |
          echo "Current directory: $(pwd)"
          echo "Listing all files..."
          ls -R .

      - name: 3. Set up and Start Minikube
        uses: medyagh/setup-minikube@latest

      - name: 4. Update Deployment with new Image Tag
        run: |
          sed -i "s|__IMAGE_NAME__|${{ env.DOCKER_IMAGE }}:${{ needs.build-and-push.outputs.image_tag }}|g" app/k8s/deployment.yaml
          echo "--- Updated deployment.yaml (app/k8s/deployment.yaml) ---"
          cat app/k8s/deployment.yaml

      - name: 5. Deploy Application to Minikube
        run: |
          echo "Applying Kubernetes manifests..."
          kubectl apply -f app/k8s/deployment.yaml
          kubectl apply -f app/k8s/service.yaml

      - name: 6. Verify Deployment
        run: |
          echo "Waiting for deployment to be ready..."
          kubectl rollout status deployment/house-price  --timeout=120s 
          echo -e "\n--- Pod Status ---"
          kubectl get pods
          echo -e "\n--- Service Status ---"
          kubectl get service